plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.14,6.2)'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

version = mod_version
group = mod_group_id
base {
    archivesName = "${mod_id}-${loader}-${minecraft_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            property 'forge.enabledGameTestNamespaces', 'collectorsalbum'
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=collectorsalbum.mixins.json"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            property 'forge.enabledGameTestNamespaces', 'collectorsalbum'
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=collectorsalbum.mixins.json"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    // Integrations
    implementation fg.deobf("curse.maven:${configuration_group}:${configuration_file}") // Configuration API
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def replaceProperties = [
        minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version: forge_version, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range,
        mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
        mod_authors: mod_authors, mod_description: mod_description
]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "collectorsalbum",
                "Specification-Vendor"    : "Toma",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Toma",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "collectorsalbum.mixins.json"
        ])
    }
}

mixin {
    add sourceSets.main, "collectorsalbum.refmap.json"
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
